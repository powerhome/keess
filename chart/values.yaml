# Default values for keess.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: powerhome/keess
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Default Keess config
logLevel: "info"

# localCluster must be specified for the chart to work correctly.
localCluster: ""
kubeConfigPath: "/root/.kube/config"
pollingInterval: "60"
namespacePollingInterval: "60"
housekeepingInterval: "60"
enableServiceSync: false


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "keess"
  createToken: true

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

nodeSelector: {}

tolerations: []

affinity: {}

service:
  port: 8080

# If you need to synchronize across different clusters you need to specify this configuration.
# This will assume a static kubeconfig file.
config:
  kubeconfigContent: {}
  #   apiVersion: v1
  #   clusters:
  #   - cluster:
  #       certificate-authority: fake-ca-file
  #       server: https://1.2.3.4
  #     name: development
  #   - cluster:
  #       insecure-skip-tls-verify: true
  #       server: https://5.6.7.8
  #     name: test
  #   contexts:
  #   - context:
  #       cluster: development
  #       namespace: frontend
  #       user: developer
  #     name: dev-frontend
  #   - context:
  #       cluster: development
  #       namespace: storage
  #       user: developer
  #     name: dev-storage
  #   - context:
  #       cluster: test
  #       namespace: default
  #       user: experimenter
  #     name: exp-test
  #   current-context: ""
  #   kind: Config
  #   preferences: {}
  #   users:
  #   - name: developer
  #     user:
  #       client-certificate: fake-cert-file
  #       client-key: fake-key-file
  #   - name: experimenter
  #     user:
  #       # Documentation note (this comment is NOT part of the command output).
  #       # Storing passwords in Kubernetes client config is risky.
  #       # A better alternative would be to use a credential plugin
  #       # and store the credentials separately.
  #       # See https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins
  #       password: some-password
  #       username: exp

extraVolumes: []
  # - name: extra-volume
  #   secret:
  #     secretName: extra-secret
  #     defaultMode: 420

extraVolumeMounts: []
  # - name: extra-volume
  #   mountPath: /path/to/mount
  #   readOnly: true
  #   subPath: extra-subpath

kubeconfigReloader:
  enabled: false
  credentials: {}
    # name: s3-credentials
    # mountPath: /root/.aws # optional, defaults to /root/.aws
    # readOnly: true # optional, defaults to true
    # data:
    #   credentials: |-
    #     [default]
    #     aws_access_key_id = ""
    #     aws_secret_access_key = ""
  image:
    repository: powerhome/keess-kubeconfig-reloader
    pullPolicy: IfNotPresent
    tag: ""
  config:
    s3:
      endpoint: https://s3.us-east-1.amazonaws.com
      bucket: keess-prod
      bucketPath: kind
    credentialsFile: /root/.aws/credentials
  resources: {}
    # limits:
    #   cpu: 200m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 64Mi
  extraVolumeMounts: []
    # - name: extra-volume
    #   mountPath: /path/to/mount
    #   readOnly: true
    #   subPath: extra-subpath
