apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keess.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "keess.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "keess.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keess.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keess.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if or .Values.config.kubeconfigContent (or .Values.extraVolumes .Values.kubeconfigReloader.credentials.name) }}
      volumes:
      {{- end }}
      {{- if .Values.config.kubeconfigContent }}
        - name: config
          secret:
            secretName: {{ template "keess.fullname" . }}
      {{- end }}
      {{- if .Values.kubeconfigReloader.credentials.name }}
        - name: {{ .Values.kubeconfigReloader.credentials.name }}
          secret:
            secretName: {{ .Values.kubeconfigReloader.credentials.name }}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      containers:
      {{- if and .Values.kubeconfigReloader.enabled (not .Values.config.kubeconfigContent) }}
        - name: {{ .Chart.Name }}-config-reloader
          image: "{{ .Values.kubeconfigReloader.image.repository }}:{{ .Values.kubeconfigReloader.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.kubeconfigReloader.image.pullPolicy }}
          env:
            - name: S3_ENDPOINT
              value: {{ .Values.kubeconfigReloader.config.s3.endpoint }}
            - name: S3_BUCKET
              value: {{ .Values.kubeconfigReloader.config.s3.bucket }}
            - name: S3_BUCKET_PATH
              value: {{ .Values.kubeconfigReloader.config.s3.bucketPath }}
            - name: CREDENTIALS_FILE
              value: {{ .Values.kubeconfigReloader.config.credentialsFile }}
            - name: LOCAL_CLUSTER_NAME
              value: {{ .Values.localCluster }}
          resources:
            {{- toYaml .Values.kubeconfigReloader.resources | nindent 12 }}
          {{- if or .Values.kubeconfigReloader.credentials .Values.kubeconfigReloader.extraVolumeMounts }}
          volumeMounts:
          {{- end }}
          {{- if .Values.kubeconfigReloader.credentials.name }}
            - mountPath: {{ .Values.kubeconfigReloader.credentials.mountPath | default "/root/.aws" }}
              name: {{ .Values.kubeconfigReloader.credentials.name }}
              readOnly: {{ .Values.kubeconfigReloader.credentials.readOnly | default true }}
          {{- end }}
          {{- with .Values.kubeconfigReloader.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            - --logLevel={{ .Values.logLevel }}
            - --localCluster={{ .Values.localCluster }}
            - --kubeConfigPath={{ .Values.kubeConfigPath }}
            - --pollingInterval={{ .Values.pollingInterval }}
            - --namespacePollingInterval={{ .Values.namespacePollingInterval }}
            - --housekeepingInterval={{ .Values.housekeepingInterval }}
            - --enableServiceSync={{ .Values.enableServiceSync }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.config.kubeconfigContent .Values.extraVolumeMounts }}
          volumeMounts:
          {{- end }}
          {{- if .Values.config.kubeconfigContent }}
            - mountPath: /root/.kube
              name: kubeconfig-dir
              readOnly: true
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
