---
apiVersion: v1
kind: Namespace
metadata:
  name: keess
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keess
  namespace: keess
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: keess
  name: keess-token
  namespace: keess
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keess
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - create
      - update
      - patch
      - delete
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - list
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keess
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keess
subjects:
  - kind: ServiceAccount
    name: keess
    namespace: keess
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-credentials
  namespace: keess
data:
  credentials: |-
    [default]
    aws_access_key_id = M0FXSQJM26HDTOX5JVEI
    aws_secret_access_key = KOnLdjQpckpNWw4ZGoVJhvnKV5CS5oEbcUZBQYb/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: keess
    app.kubernetes.io/name: keess
  name: keess
  namespace: keess
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: keess
      app.kubernetes.io/name: keess
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: keess
        app.kubernetes.io/name: keess
    spec:
      containers:
        - name: kubeconfig-reloader
          image: leonardogodoyphrg/keess-kubeconfig-reloader:1.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: S3_ENDPOINT
              value: https://s3.powerhrg.com
            - name: S3_BUCKET
              value: keess-prod
            - name: S3_BUCKET_PATH
              value: kind
            - name: CREDENTIALS_FILE
              value: /root/.aws/credentials
            - name: LOCAL_CLUSTER_NAME
              value: <cluster>
          resources:
            limits:
              ephemeral-storage: 150Mi
              memory: 128Mi
            requests:
              cpu: 100m
              ephemeral-storage: 150Mi
              memory: 64Mi
          volumeMounts:
            - mountPath: /root/.kube
              name: kubeconfig-dir
              readOnly: false
            - mountPath: /root/.aws
              name: s3-credentials
              readOnly: true
        - args:
            - '--logLevel=debug'
            - '--localCluster=<cluster>'
            - '--kubeConfigPath=/root/.kube/config'
            - '--pollingInterval=60'
            - '--namespacePollingInterval=60'
            - '--housekeepingInterval=60'
          image: leonardogodoyphrg/keess:1.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
          name: keess
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            limits:
              ephemeral-storage: 150Mi
              memory: 128Mi
            requests:
              cpu: 100m
              ephemeral-storage: 150Mi
              memory: 64Mi
          securityContext: {}
          volumeMounts:
            - mountPath: /root/.kube
              name: kubeconfig-dir
              readOnly: true
      securityContext: {}
      serviceAccountName: keess
      volumes:
        - name: kubeconfig-dir
          emptyDir:
            sizeLimit: 150Mi
        - name: s3-credentials
          configMap:
            name: s3-credentials
